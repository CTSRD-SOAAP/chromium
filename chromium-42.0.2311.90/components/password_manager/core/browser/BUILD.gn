# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/protobuf/proto_library.gni")

if (is_android) {
  import("//build/config/android/config.gni")
}

config("password_manager_config") {
  # Sync (not supported in Android WebView).
  if (!is_android || !is_android_webview_build) {
    defines = [ "PASSWORD_MANAGER_ENABLE_SYNC" ]
  }
}

static_library("browser") {
  sources = [
    "affiliation_backend.cc",
    "affiliation_backend.h",
    "affiliation_database.cc",
    "affiliation_database.h",
    "affiliation_fetch_throttler.cc",
    "affiliation_fetch_throttler.h",
    "affiliation_fetch_throttler_delegate.h",
    "affiliation_fetcher.cc",
    "affiliation_fetcher.h",
    "affiliation_fetcher_delegate.h",
    "affiliation_service.cc",
    "affiliation_service.h",
    "affiliation_utils.cc",
    "affiliation_utils.h",
    "browser_save_password_progress_logger.cc",
    "browser_save_password_progress_logger.h",
    "facet_manager.cc",
    "facet_manager.h",
    "facet_manager_host.h",
    "log_receiver.h",
    "log_router.cc",
    "log_router.h",
    "login_database.cc",
    "login_database.h",
    "login_database_mac.cc",
    "login_database_posix.cc",
    "login_database_win.cc",
    "login_model.h",
    "password_autofill_manager.cc",
    "password_autofill_manager.h",
    "password_form_manager.cc",
    "password_form_manager.h",
    "password_generation_manager.cc",
    "password_generation_manager.h",
    "password_manager.cc",
    "password_manager.h",
    "password_manager_client.cc",
    "password_manager_client.h",
    "password_manager_driver.h",
    "password_manager_internals_service.cc",
    "password_manager_internals_service.h",
    "password_manager_metrics_util.cc",
    "password_manager_metrics_util.h",
    "password_manager_url_collection_experiment.cc",
    "password_manager_url_collection_experiment.h",
    "password_store.cc",
    "password_store.h",
    "password_store_change.h",
    "password_store_consumer.cc",
    "password_store_consumer.h",
    "password_store_default.cc",
    "password_store_default.h",
    "password_store_sync.cc",
    "password_store_sync.h",
    "psl_matching_helper.cc",
    "psl_matching_helper.h",
    "test_affiliation_fetcher_factory.h",
    "webdata/logins_table.cc",
    "webdata/logins_table.h",
    "webdata/logins_table_win.cc",
    "webdata/password_web_data_service_win.cc",
    "webdata/password_web_data_service_win.h",
  ]

  deps = [
    ":proto",
    "//base",
    "//components/autofill/core/common",
    "//components/keyed_service/core",
    "//components/os_crypt",
    "//components/password_manager/core/common",
    "//components/strings",
    "//net",
    "//sql",
    "//third_party/protobuf:protobuf_lite",
    "//url",
  ]

  if (is_mac) {
    # TODO(blundell): Provide the iOS login DB implementation and then
    # also exclude the POSIX one from iOS. http://crbug.com/341429
    sources -= [ "login_database_posix.cc" ]
  }

  # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
  configs += [ "//build/config/compiler:no_size_t_to_int_warning" ]
  public_configs = [ ":password_manager_config" ]

  # Sync (not supported in Android WebView).
  if (!is_android || !is_android_webview_build) {
    sources += [
      "password_syncable_service.cc",
      "password_syncable_service.h",
    ]
    deps += [ "//sync" ]
  }
}

proto_library("proto") {
  sources = [
    "affiliation_api.proto",
  ]
}

source_set("test_support") {
  testonly = true
  sources = [
    "fake_affiliation_api.cc",
    "fake_affiliation_api.h",
    "fake_affiliation_fetcher.cc",
    "fake_affiliation_fetcher.h",
    "mock_affiliation_consumer.cc",
    "mock_affiliation_consumer.h",
    "mock_password_store.cc",
    "mock_password_store.h",
    "password_manager_test_utils.cc",
    "password_manager_test_utils.h",
    "stub_password_manager_client.cc",
    "stub_password_manager_client.h",
    "stub_password_manager_driver.cc",
    "stub_password_manager_driver.h",
    "test_password_store.cc",
    "test_password_store.h",
  ]

  public_deps = [
    ":browser",
  ]
  deps = [
    "//base",
    "//components/autofill/core/common",
    "//testing/gmock",
    "//testing/gtest",
  ]
}
