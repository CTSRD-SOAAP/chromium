--- native.ninja	2014-04-03 14:16:29.559476713 +0100
+++ manual.ninja	2014-04-03 14:31:41.617414337 +0100
@@ -1,14 +1,19 @@
-cc = cc
-cxx = c++
+soaap_llvm_path = /replace/with/your/SOAAP/llvm
+soaap_source_path = /replace/with/your/SOAAP/sources
+
+cc = $soaap_llvm_path/bin/clang
+cxx = $soaap_llvm_path/bin/clang++ -stdlib=libc++
 ld = $cc
 ldxx = $cxx
 ar = /usr/bin/ar
+llc = llc
+soaap_include_dir = $soaap_source_path/include
 
 pool link_pool
   depth = 1
 
 rule cc
-  command = $cc -MMD -MF $out.d $defines $includes $cflags $cflags_c $cflags_pch_c -c $in -o $out
+  command = $cc -MMD -MF $out.d $defines $includes $cflags $cflags_c $cflags_pch_c -c $in -o $out && $cc -DSOAAP -MMD -MF $out.d $defines $includes `echo $cflags | sed 's/O2/O0/g'` `echo $cflags_c | sed 's/O2/O0/g'` `echo $cflags_pch_c | sed 's/O2/O0/g'` -I$soaap_include_dir -c $in -gline-tables-only -emit-llvm -o $out.bc
   description = CC $out
   depfile = $out.d
   deps = gcc
@@ -16,21 +21,21 @@
   command = $cc $defines $includes $cflags $cflags_c $cflags_pch_c -c $in -o $out
   description = CC $out
 rule cxx
-  command = $cxx -MMD -MF $out.d $defines $includes $cflags $cflags_cc $cflags_pch_cc -c $in -o $out
+  command = $cxx -MMD -MF $out.d $defines $includes $cflags $cflags_cc $cflags_pch_cc -c $in -o $out && $cxx -MMD -MF $out.d $defines $includes `echo $cflags | sed 's/O2/O0/g'` `echo $cflags_cc | sed 's/O2/O0/g' | sed 's/-fno-rtti//g'` `echo $cflags_pch_cc | sed 's/O2/O0/g'` -c $in -gline-tables-only -gsoaap -emit-llvm -DSOAAP -I$soaap_include_dir -o $out.bc
   description = CXX $out
   depfile = $out.d
   deps = gcc
 rule alink
-  command = rm -f $out && $ar rcs $out $in
+  command = rm -f $out && $ar rcs $out $in && rm -f $out.bc && $ar rcs $out.bc `llvm-file-map $in`
   description = AR $out
 rule alink_thin
-  command = rm -f $out && $ar rcsT $out $in
+  command = rm -f $out && $ar rcsT $out $in && rm -f $out.bc && $ar rcs $out.bc `llvm-file-map $in`
   description = AR $out
 rule solink
   command = if [ ! -e $lib -o ! -e ${lib}.TOC ]; then $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
-      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p $
+      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME && nm -gD -f p $
       ${lib} | cut -f1-2 -d' '; } > ${lib}.TOC; else $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
-      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p $
+      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME && nm -gD -f p $
       ${lib} | cut -f1-2 -d' '; } > ${lib}.tmp && if ! cmp -s ${lib}.tmp ${lib}.TOC; then mv ${lib}.tmp ${lib}.TOC ; $
       fi; fi
   description = SOLINK $lib
@@ -38,15 +43,15 @@
   restat = 1
 rule solink_module
   command = if [ ! -e $lib -o ! -e ${lib}.TOC ]; then $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
-      -Wl,--start-group $in $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p ${lib} | $
+      -Wl,--start-group $in $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME && nm -gD -f p ${lib} | $
       cut -f1-2 -d' '; } > ${lib}.TOC; else $ld -shared $ldflags -o $lib -Wl,-soname=$soname -Wl,--start-group $in $
-      $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p ${lib} | cut -f1-2 -d' '; } > $
+      $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME && nm -gD -f p ${lib} | cut -f1-2 -d' '; } > $
       ${lib}.tmp && if ! cmp -s ${lib}.tmp ${lib}.TOC; then mv ${lib}.tmp ${lib}.TOC ; fi; fi
   description = SOLINK(module) $lib
   pool = link_pool
   restat = 1
 rule link
-  command = $ld $ldflags -o $out -Wl,--start-group $in $solibs -Wl,--end-group $libs
+  command = $ld $ldflags -o $out -Wl,--start-group $in $solibs -Wl,--end-group $libs && llvm-link-wrapper $out.bc `llvm-file-map $in`
   description = LINK $out
   pool = link_pool
 rule stamp
@@ -55,6 +60,15 @@
 rule copy
   command = ln -f $in $out 2>/dev/null || (rm -rf $out && cp -af $in $out)
   description = COPY $in $out
+rule llc
+  command = $llc -filetype=obj $in
+  description = LLC $out
+rule chromebclink
+  command = $ld -B /usr/local/bin -Wl,-z,now -Wl,-z,relro -Wl,--unresolved-symbols=ignore-all -pthread -Wl,-z,noexecstack -fPIC -Wl,--no-keep-memory -L. -L/usr/local/lib -L/usr/local/lib/nss -Wl,-O1 -Wl,--as-needed -o $out $in -lX11 -lXcursor -lXrender -lXss -lXext -L/usr/local/lib -lexecinfo -lgmodule-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl -lXtst -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -lXinerama -lXi -lXrandr -lXcomposite -lXdamage -lXfixes -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lfreetype -lfontconfig -lnss3 -lsmime3 -lnssutil3 -lplds4 -lplc4 -lnspr4 -lasound -lxml2 -lxslt -lz -liconv -lm -lcups -lssl -lcrypto -pthread -lcrypt -lssp_nonshared -L/usr/local/lib -lgcrypt -lgpg-error -lexpat -lusb -ldbus-1 `cat objfiles.txt | xargs`
+  description = CHROME_BCLINK $out
+rule soaap
+  command = soaap ${SOAAP_FLAGS} -o /dev/null $in
+  description = SOAAP $in
 
 subninja obj/third_party/libusb/libusb.ninja
 subninja obj/skia/skia_opts_none.ninja
@@ -801,6 +815,13 @@
 subninja obj/build/All.ninja
 subninja obj/build/chromium_builder_nacl_win_integration.ninja
 
+# SOAAP-related targets
+build chrome.o : llc chrome.bc
+build chrome.bc : phony chrome
+build chrome.bc.exe : chromebclink chrome.o
+build chrome.soaap : soaap chrome.bc
+build chrome.dbcsoaap : soaap chrome.dbc
+
 # Short names for targets.
 build inspector_overlay_page: phony gen/blink/InspectorOverlayPage.h
 build common_video: phony obj/third_party/webrtc/common_video/libcommon_video.a
