/*
 * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    CustomLegacyCall
] interface HTMLObjectElement : HTMLElement {
    readonly attribute HTMLFormElement form;
    [Reflect, TreatNullAs=NullString] attribute DOMString code;
    [Reflect, TreatNullAs=NullString] attribute DOMString align;
    [Reflect, TreatNullAs=NullString] attribute DOMString archive;
    [Reflect, TreatNullAs=NullString] attribute DOMString border;
    [Reflect, TreatNullAs=NullString] attribute DOMString codeBase;
    [Reflect, TreatNullAs=NullString] attribute DOMString codeType;
    [Reflect, TreatNullAs=NullString, URL, PerWorldBindings, ActivityLogging=SetterForIsolatedWorlds] attribute DOMString data;
    [Reflect] attribute boolean declare;
    [Reflect, TreatNullAs=NullString] attribute DOMString height;
    [Reflect] attribute long hspace;
    [Reflect, TreatNullAs=NullString] attribute DOMString name;
    [Reflect, TreatNullAs=NullString] attribute DOMString standby;
    [Reflect, TreatNullAs=NullString] attribute DOMString type;
    [Reflect, TreatNullAs=NullString] attribute DOMString useMap;
    [Reflect] attribute long vspace;
    [Reflect, TreatNullAs=NullString] attribute DOMString width;
    readonly attribute boolean willValidate;
    readonly attribute ValidityState validity;
    readonly attribute DOMString validationMessage;
    boolean checkValidity();
    void setCustomValidity([TreatNullAs=NullString, TreatUndefinedAs=NullString] DOMString error);

    // Introduced in DOM Level 2:
    [CheckSecurityForNode] readonly attribute Document contentDocument;
    [Custom, NotEnumerable] getter boolean (unsigned long index);
    [Custom] setter boolean (unsigned long index, Node value);
    [Custom, NotEnumerable] getter Node (DOMString name);
    [Custom] setter Node (DOMString name, Node value);

    [CheckSecurityForNode, RaisesException] SVGDocument getSVGDocument();
};

