// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Protocol buffer definitions for Syncable FileSystem.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package sync_file_system;

// TODO(tzik): Migrate from DriveMetadat to DriveEntryMetadata and erase this.
// http://crbug.com/240165
message DriveMetadata {
  required string resource_id = 1;
  required string md5_checksum = 2;
  required bool conflicted = 3;

  // When true, indicates that the remote file identified by |resource_id|
  // should be fetched for solving the conflict (resolve-to-remote resolution).
  required bool to_be_fetched = 4;

  enum ResourceType {
    RESOURCE_TYPE_FILE = 0;
    RESOURCE_TYPE_FOLDER = 1;
  }

  optional ResourceType type = 5 [default = RESOURCE_TYPE_FILE];
}

enum DriveResourceKind {
  KIND_UNSUPPORTED = 0;
  KIND_FILE = 1;
  KIND_FOLDER = 2;
}

message DriveEntryMetadata {
  // Resource ID of the remote resource which the DriveFileMetadata tracks.
  required string resource_id = 1;

  optional string app_id = 2;
  optional bool is_app_root = 3;

  // Holds details of file/folder metadata.
  message Details {
    optional string parent_resource_id = 1;
    optional string title = 2;
    optional DriveResourceKind kind = 3;
    optional string md5 = 4;
    optional string etag = 5;

    // Creation time and modification time of the resource.
    // Serialized by Time::ToInternalValue.
    optional int64 creation_time = 6;
    optional int64 modification_time = 7;

    optional bool deleted = 8;
    optional int64 change_id = 9;
  }

  // |synced_details| holds the file details snapshot when the file was
  // fetched through remote-to-local update.
  // This should contain same value if |dirty| is false.
  optional Details synced_details = 4;

  // |remote_details| holds the latest file details that may not yet be
  // applied to local metadata.
  // This should be updated by each listed ChangeResource.
  optional Details remote_details = 5;

  // True if the file is changed since last update for this file.
  optional bool dirty = 6;

  // True if the DriveFileMetadata is active.
  // Remote file content update should only be applied for active
  // DriveFileMetadata.
  // Active DriveFileMetadata must have a unique title under its parent.
  optional bool active = 7;

  // Valid only for folders.
  // True indicates the folder contents has not yet been fetched.
  optional bool needs_folder_listing = 8;

  optional bool conflicted = 9;
}
