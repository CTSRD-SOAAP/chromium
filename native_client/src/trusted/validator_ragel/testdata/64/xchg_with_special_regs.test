@hex:
  # xchg %bp, (%rip)
  66 87 2d 00 00 00 00
  # xchg %rbp, (%rip)
  48 87 2d 00 00 00 00
  
  # xchg %sp, (%rip)
  66 87 25 00 00 00 00
  # xchg %rsp, (%rip)
  48 87 25 00 00 00 00
  
  # bundle alignment
  90 90 90 90
  
  # xchg %r15, (%rip)
  4c 87 3d 00 00 00 00
  
  # These sequences technically are safe, but xchg with memory is not 
  # considered zero-extending instruction, so they are rejected.
  # xchg %ebp, (%rip)
  87 2d 00 00 00 00
  # add %r15, %rbp
  4c 01 fd
  
  # xchg %esp, (%rip)
  87 25 00 00 00 00
  # add %r15, %rsp
  4c 01 fc
@dis:
     0:	66 87 2d 00 00 00 00                         	xchg   %bp,0x0(%rip)        # 0x7
     7:	48 87 2d 00 00 00 00                         	xchg   %rbp,0x0(%rip)        # 0xe
     e:	66 87 25 00 00 00 00                         	xchg   %sp,0x0(%rip)        # 0x15
    15:	48 87 25 00 00 00 00                         	xchg   %rsp,0x0(%rip)        # 0x1c
    1c:	90                                           	nop
    1d:	90                                           	nop
    1e:	90                                           	nop
    1f:	90                                           	nop
    20:	4c 87 3d 00 00 00 00                         	xchg   %r15,0x0(%rip)        # 0x27
    27:	87 2d 00 00 00 00                            	xchg   %ebp,0x0(%rip)        # 0x2d
    2d:	4c 01 fd                                     	add    %r15,%rbp
    30:	87 25 00 00 00 00                            	xchg   %esp,0x0(%rip)        # 0x36
    36:	4c 01 fc                                     	add    %r15,%rsp
@rdfa_output:
  0: [0] error - %bpl or %bp is changed
  7: [0] error - %bpl or %bp is changed
  e: [0] error - %spl or %sp is changed
  15: [0] error - %spl or %sp is changed
  20: [0] error - %r15 is changed
  27: [0] error - %bpl or %bp is changed
  2d: [0] improper %rbp sandboxing
  30: [0] error - %spl or %sp is changed
  36: [0] improper %rsp sandboxing
  return code: 1
